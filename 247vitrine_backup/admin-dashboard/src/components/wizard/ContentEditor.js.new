import React, { useState, useEffect } from 'react';
import ImageUploader from './ImageUploader';
import SEOEditor from './SEOEditor';
import TouchFriendlyButton from '../common/TouchFriendlyButton';
import Tooltip from '../common/Tooltip';
import exampleContent from './exampleContent';
import './Wizard.css';

function ContentEditor({ content, onChange }) {
  const [activeTab, setActiveTab] = useState('general');
  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);
  const [showAdditionalSocial, setShowAdditionalSocial] = useState(false);
  const [showAdditionalBusiness, setShowAdditionalBusiness] = useState(false);
  const [showExampleSelector, setShowExampleSelector] = useState(false);

  // Erkennung von mobilen GerÃ¤ten
  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 768);
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  // Initialisiere fehlende Objekte, falls sie nicht existieren
  if (!content.socialMedia) {
    content.socialMedia = {
      facebook: '',
      instagram: '',
      linkedin: '',
      xing: '',
      youtube: '',
      twitter: ''
    };
  }

  if (!content.gallery) {
    content.gallery = [];
  }

  if (!content.businessCard) {
    content.businessCard = {
      companyName: '',
      contactPerson: '',
      position: '',
      address: '',
      phone: '',
      email: '',
      website: '',
      logo: '',
      qrCodeUrl: ''
    };
  }

  const handleChange = (section, field, value) => {
    const updatedContent = { ...content };

    if (section === 'general') {
      updatedContent[field] = value;
    } else if (section === 'services') {
      const serviceIndex = parseInt(field.split('-')[1]);
      const serviceField = field.split('-')[2];
      updatedContent.services[serviceIndex][serviceField] = value;
    } else {
      updatedContent[section][field] = value;
    }

    onChange(updatedContent);
  };

  const addService = () => {
    const updatedContent = { ...content };
    updatedContent.services.push({
      title: '',
      description: '',
      icon: 'ðŸ”§'
    });
    onChange(updatedContent);
  };

  const removeService = (index) => {
    const updatedContent = { ...content };
    updatedContent.services.splice(index, 1);
    onChange(updatedContent);
  };

  // Galerie-Methoden
  const addGalleryItem = () => {
    const updatedContent = { ...content };
    updatedContent.gallery.push({
      title: 'Neues Bild',
      description: 'Beschreibung des Bildes',
      imageUrl: 'https://via.placeholder.com/600x400',
      thumbnailUrl: '',
      order: updatedContent.gallery.length
    });
    onChange(updatedContent);
  };

  const removeGalleryItem = (index) => {
    const updatedContent = { ...content };
    updatedContent.gallery.splice(index, 1);
    onChange(updatedContent);
  };

  const handleGalleryChange = (index, field, value) => {
    const updatedContent = { ...content };
    updatedContent.gallery[index][field] = value;
    onChange(updatedContent);
  };

  // Beispielinhalte laden
  const loadExampleContent = (type) => {
    if (!exampleContent[type]) return;

    const example = exampleContent[type];
    const updatedContent = { ...content };

    // Allgemeine Informationen
    if (example.general) {
      updatedContent.title = example.general.title;
      updatedContent.description = example.general.description;
      if (example.general.logo) updatedContent.logo = example.general.logo;
    }

    // Hero-Bereich
    if (example.hero) {
      updatedContent.hero.title = example.hero.title;
      updatedContent.hero.subtitle = example.hero.subtitle;
      if (example.hero.image) updatedContent.hero.image = example.hero.image;
    }

    // Ãœber uns
    if (example.about) {
      updatedContent.about.title = example.about.title;
      updatedContent.about.text = example.about.text;
      if (example.about.image) updatedContent.about.image = example.about.image;
    }

    // Leistungen
    if (example.services && example.services.length > 0) {
      updatedContent.services = example.services.map(service => ({ ...service }));
    }

    // Kontakt
    if (example.contact) {
      updatedContent.contact.email = example.contact.email;
      updatedContent.contact.phone = example.contact.phone;
      updatedContent.contact.address = example.contact.address;
    }

    onChange(updatedContent);
    setShowExampleSelector(false);
  };

  // Render-Funktion fÃ¼r die Tabs
  const renderTabContent = () => {
    switch (activeTab) {
      case 'general':
        return (
          <div className="editor-section">
            <div className="form-group">
              <Tooltip content="Der Titel deiner Website erscheint in der Browser-Leiste und in Suchergebnissen.">
                <label>Titel</label>
              </Tooltip>
              <input
                type="text"
                value={content.title}
                onChange={(e) => handleChange('general', 'title', e.target.value)}
                placeholder="z.B. Muster Handwerker GmbH"
              />
            </div>
            <div className="form-group">
              <Tooltip content="Eine kurze Beschreibung deiner Website, die in Suchergebnissen angezeigt werden kann.">
                <label>Beschreibung</label>
              </Tooltip>
              <textarea
                value={content.description}
                onChange={(e) => handleChange('general', 'description', e.target.value)}
                placeholder="z.B. Ihr zuverlÃ¤ssiger Partner fÃ¼r alle Handwerksarbeiten"
              ></textarea>
            </div>
            <div className="form-group">
              <Tooltip content="Dein Firmenlogo wird in der Kopfzeile deiner Website angezeigt. Empfohlene GrÃ¶ÃŸe: 200x80 Pixel.">
                <label>Logo</label>
              </Tooltip>
              {content.logo ? (
                <div className="image-preview-container">
                  <img
                    src={content.logo}
                    alt="Logo"
                    className="image-preview logo-preview"
                  />
                  <button
                    type="button"
                    className="btn-danger btn-small"
                    onClick={() => handleChange('general', 'logo', '')}
                  >
                    Logo entfernen
                  </button>
                </div>
              ) : (
                <ImageUploader
                  layoutType={content.layout?.category || 'one-page'}
                  imageType="logo"
                  onImageUploaded={(imageUrl) => handleChange('general', 'logo', imageUrl)}
                />
              )}
            </div>
          </div>
        );
      case 'hero':
        return (
          <div className="editor-section">
            <div className="form-group">
              <Tooltip content="Die HauptÃ¼berschrift im Hero-Bereich deiner Website. Sie sollte kurz und aussagekrÃ¤ftig sein.">
                <label>Ãœberschrift</label>
              </Tooltip>
              <input
                type="text"
                value={content.hero.title}
                onChange={(e) => handleChange('hero', 'title', e.target.value)}
                placeholder="z.B. Willkommen bei Muster Handwerker"
              />
            </div>
            <div className="form-group">
              <Tooltip content="Ein kurzer Text unter der HauptÃ¼berschrift. Hier kannst du einen Slogan oder eine kurze Beschreibung einfÃ¼gen.">
                <label>Untertitel</label>
              </Tooltip>
              <input
                type="text"
                value={content.hero.subtitle}
                onChange={(e) => handleChange('hero', 'subtitle', e.target.value)}
                placeholder="z.B. QualitÃ¤t und ZuverlÃ¤ssigkeit seit 1995"
              />
            </div>
            <div className="form-group">
              <Tooltip content="Das Hauptbild im oberen Bereich deiner Website. WÃ¤hle ein qualitativ hochwertiges Bild, das dein Unternehmen gut reprÃ¤sentiert.">
                <label>Hero-Bild</label>
              </Tooltip>
              {content.hero.image ? (
                <div className="image-preview-container">
                  <img
                    src={content.hero.image}
                    alt="Hero-Bild"
                    className="image-preview"
                  />
                  <button
                    type="button"
                    className="btn-danger btn-small"
                    onClick={() => handleChange('hero', 'image', '')}
                  >
                    Bild entfernen
                  </button>
                </div>
              ) : (
                <ImageUploader
                  layoutType={content.layout?.category || 'one-page'}
                  imageType="hero"
                  onImageUploaded={(imageUrl) => handleChange('hero', 'image', imageUrl)}
                />
              )}
            </div>
          </div>
        );
      case 'about':
        return (
          <div className="editor-section">
            <div className="form-group">
              <label>Ãœberschrift</label>
              <input
                type="text"
                value={content.about.title}
                onChange={(e) => handleChange('about', 'title', e.target.value)}
                placeholder="z.B. Ãœber uns"
              />
            </div>
            <div className="form-group">
              <label>Text</label>
              <textarea
                value={content.about.text}
                onChange={(e) => handleChange('about', 'text', e.target.value)}
                placeholder="z.B. Wir sind ein Familienunternehmen mit Ã¼ber 25 Jahren Erfahrung..."
              ></textarea>
            </div>
            <div className="form-group">
              <label>Ãœber-uns-Bild</label>
              {content.about.image ? (
                <div className="image-preview-container">
                  <img
                    src={content.about.image}
                    alt="Ãœber-uns-Bild"
                    className="image-preview"
                  />
                  <button
                    type="button"
                    className="btn-danger btn-small"
                    onClick={() => handleChange('about', 'image', '')}
                  >
                    Bild entfernen
                  </button>
                </div>
              ) : (
                <ImageUploader
                  layoutType={content.layout?.category || 'one-page'}
                  imageType="about"
                  onImageUploaded={(imageUrl) => handleChange('about', 'image', imageUrl)}
                />
              )}
            </div>
          </div>
        );
      case 'services':
        return (
          <div className="editor-section">
            <h3>Leistungen</h3>
            {content.services.map((service, index) => (
              <div key={index} className="service-item">
                <h4>Leistung {index + 1}</h4>
                <div className="form-group">
                  <label>Titel</label>
                  <input
                    type="text"
                    value={service.title}
                    onChange={(e) => handleChange('services', `service-${index}-title`, e.target.value)}
                    placeholder="z.B. SanitÃ¤rinstallation"
                  />
                </div>
                <div className="form-group">
                  <label>Beschreibung</label>
                  <textarea
                    value={service.description}
                    onChange={(e) => handleChange('services', `service-${index}-description`, e.target.value)}
                    placeholder="z.B. Professionelle Installation und Reparatur von SanitÃ¤ranlagen"
                  ></textarea>
                </div>
                <div className="form-group">
                  <label>Icon</label>
                  <input
                    type="text"
                    value={service.icon}
                    onChange={(e) => handleChange('services', `service-${index}-icon`, e.target.value)}
                    placeholder="z.B. ðŸ”§"
                  />
                </div>
                {content.services.length > 1 && (
                  <button
                    type="button"
                    className="btn-danger"
                    onClick={() => removeService(index)}
                  >
                    Leistung entfernen
                  </button>
                )}
              </div>
            ))}
            <button type="button" className="btn-secondary" onClick={addService}>
              Leistung hinzufÃ¼gen
            </button>
          </div>
        );
      case 'contact':
        return (
          <div className="editor-section">
            <div className="form-group">
              <Tooltip content="Deine Kontakt-E-Mail-Adresse. Ãœber diese E-Mail-Adresse kÃ¶nnen dich Kunden erreichen.">
                <label>E-Mail</label>
              </Tooltip>
              <input
                type="email"
                value={content.contact.email}
                onChange={(e) => handleChange('contact', 'email', e.target.value)}
                placeholder="z.B. info@musterhandwerker.de"
              />
            </div>
            <div className="form-group">
              <label>Telefon</label>
              <input
                type="tel"
                value={content.contact.phone}
                onChange={(e) => handleChange('contact', 'phone', e.target.value)}
                placeholder="z.B. +49 123 456789"
              />
            </div>
            <div className="form-group">
              <label>Adresse</label>
              <textarea
                value={content.contact.address}
                onChange={(e) => handleChange('contact', 'address', e.target.value)}
                placeholder="z.B. MusterstraÃŸe 123, 12345 Musterstadt"
              ></textarea>
            </div>
          </div>
        );
      case 'gallery':
        return (
          <div className="editor-section">
            <h3>Galerie</h3>
            <p>FÃ¼ge Bilder zu deiner Galerie hinzu, um deine Arbeit zu prÃ¤sentieren.</p>

            {content.gallery.map((item, index) => (
              <div key={index} className="gallery-item-editor">
                <h4>Bild {index + 1}</h4>
                <div className="form-group">
                  <label>Titel</label>
                  <input
                    type="text"
                    value={item.title}
                    onChange={(e) => handleGalleryChange(index, 'title', e.target.value)}
                    placeholder="z.B. Projekt XYZ"
                  />
                </div>
                <div className="form-group">
                  <label>Beschreibung</label>
                  <textarea
                    value={item.description}
                    onChange={(e) => handleGalleryChange(index, 'description', e.target.value)}
                    placeholder="z.B. Beschreibung des Projekts"
                  ></textarea>
                </div>
                <div className="form-group">
                  <label>Galerie-Bild</label>
                  {item.imageUrl ? (
                    <div className="image-preview-container">
                      <img
                        src={item.imageUrl}
                        alt={item.title}
                        className="image-preview"
                      />
                      <button
                        type="button"
                        className="btn-danger btn-small"
                        onClick={() => handleGalleryChange(index, 'imageUrl', '')}
                      >
                        Bild entfernen
                      </button>
                    </div>
                  ) : (
                    <ImageUploader
                      layoutType={content.layout?.category || 'one-page'}
                      imageType="gallery"
                      onImageUploaded={(imageUrl) => handleGalleryChange(index, 'imageUrl', imageUrl)}
                    />
                  )}
                </div>
                <button
                  type="button"
                  className="btn-danger"
                  onClick={() => removeGalleryItem(index)}
                >
                  Bild entfernen
                </button>
              </div>
            ))}

            <button type="button" className="btn-secondary" onClick={addGalleryItem}>
              Bild hinzufÃ¼gen
            </button>
          </div>
        );
      case 'social':
        return (
          <div className="editor-section">
            <div className="form-section-title">
              <h3>Social Media Links</h3>
            </div>
            <p>FÃ¼ge Links zu deinen Social-Media-Profilen hinzu.</p>

            <div className="form-section">
              <h4>Wichtigste Plattformen</h4>
              <div className="form-group priority-high">
                <Tooltip content="Facebook ist eine der wichtigsten Plattformen fÃ¼r lokale Unternehmen.">
                  <label>Facebook</label>
                </Tooltip>
                <input
                  type="url"
                  value={content.socialMedia.facebook}
                  onChange={(e) => handleChange('socialMedia', 'facebook', e.target.value)}
                  placeholder="z.B. https://facebook.com/meinunternehmen"
                />
              </div>
              <div className="form-group priority-high">
                <Tooltip content="Instagram ist besonders wichtig fÃ¼r visuelle Inhalte und Projekte.">
                  <label>Instagram</label>
                </Tooltip>
                <input
                  type="url"
                  value={content.socialMedia.instagram}
                  onChange={(e) => handleChange('socialMedia', 'instagram', e.target.value)}
                  placeholder="z.B. https://instagram.com/meinunternehmen"
                />
              </div>
            </div>

            <div className="form-section">
              <div className="form-section-title">
                <h4>Weitere Plattformen</h4>
                <button
                  type="button"
                  className={`toggle-section ${showAdditionalSocial ? 'expanded' : ''}`}
                  onClick={() => setShowAdditionalSocial(!showAdditionalSocial)}
                >
                  {showAdditionalSocial ? 'Ausblenden' : 'Anzeigen'}
                </button>
              </div>

              {showAdditionalSocial && (
                <>
                  <div className="form-group priority-medium">
                    <label>LinkedIn</label>
                    <input
                      type="url"
                      value={content.socialMedia.linkedin}
                      onChange={(e) => handleChange('socialMedia', 'linkedin', e.target.value)}
                      placeholder="z.B. https://linkedin.com/company/meinunternehmen"
                    />
                  </div>
                  <div className="form-group priority-medium">
                    <label>Xing</label>
                    <input
                      type="url"
                      value={content.socialMedia.xing}
                      onChange={(e) => handleChange('socialMedia', 'xing', e.target.value)}
                      placeholder="z.B. https://xing.com/profile/..."
                    />
                  </div>
                  <div className="form-group priority-low">
                    <label>YouTube</label>
                    <input
                      type="url"
                      value={content.socialMedia.youtube}
                      onChange={(e) => handleChange('socialMedia', 'youtube', e.target.value)}
                      placeholder="z.B. https://youtube.com/c/meinunternehmen"
                    />
                  </div>
                  <div className="form-group priority-low">
                    <label>Twitter</label>
                    <input
                      type="url"
                      value={content.socialMedia.twitter}
                      onChange={(e) => handleChange('socialMedia', 'twitter', e.target.value)}
                      placeholder="z.B. https://twitter.com/meinunternehmen"
                    />
                  </div>
                </>
              )}
            </div>
          </div>
        );
      case 'businessCard':
        return (
          <div className="editor-section">
            <div className="form-section-title">
              <h3>Digitale Visitenkarte</h3>
            </div>
            <p>Erstelle eine digitale Visitenkarte mit QR-Code fÃ¼r deine Kontaktdaten.</p>

            <div className="form-section">
              <h4>Wichtigste Informationen</h4>
              <div className="form-group priority-high">
                <Tooltip content="Der Name deines Unternehmens, wie er auf der Visitenkarte erscheinen soll.">
                  <label>Firmenname</label>
                </Tooltip>
                <input
                  type="text"
                  value={content.businessCard.companyName}
                  onChange={(e) => handleChange('businessCard', 'companyName', e.target.value)}
                  placeholder="z.B. Muster Handwerker GmbH"
                />
              </div>
              <div className="form-group priority-high">
                <Tooltip content="Die Telefonnummer, unter der Kunden dich erreichen kÃ¶nnen.">
                  <label>Telefon</label>
                </Tooltip>
                <input
                  type="tel"
                  value={content.businessCard.phone}
                  onChange={(e) => handleChange('businessCard', 'phone', e.target.value)}
                  placeholder="z.B. +49 123 456789"
                />
              </div>
              <div className="form-group priority-high">
                <Tooltip content="Deine E-Mail-Adresse fÃ¼r Kontaktanfragen.">
                  <label>E-Mail</label>
                </Tooltip>
                <input
                  type="email"
                  value={content.businessCard.email}
                  onChange={(e) => handleChange('businessCard', 'email', e.target.value)}
                  placeholder="z.B. info@musterhandwerker.de"
                />
              </div>
            </div>

            <div className="form-section">
              <div className="form-section-title">
                <h4>Weitere Informationen</h4>
                <button
                  type="button"
                  className={`toggle-section ${showAdditionalBusiness ? 'expanded' : ''}`}
                  onClick={() => setShowAdditionalBusiness(!showAdditionalBusiness)}
                >
                  {showAdditionalBusiness ? 'Ausblenden' : 'Anzeigen'}
                </button>
              </div>

              {showAdditionalBusiness && (
                <>
                  <div className="form-group priority-medium">
                    <label>Kontaktperson</label>
                    <input
                      type="text"
                      value={content.businessCard.contactPerson}
                      onChange={(e) => handleChange('businessCard', 'contactPerson', e.target.value)}
                      placeholder="z.B. Max Mustermann"
                    />
                  </div>
                  <div className="form-group priority-medium">
                    <label>Position</label>
                    <input
                      type="text"
                      value={content.businessCard.position}
                      onChange={(e) => handleChange('businessCard', 'position', e.target.value)}
                      placeholder="z.B. GeschÃ¤ftsfÃ¼hrer"
                    />
                  </div>
                  <div className="form-group priority-medium">
                    <label>Adresse</label>
                    <textarea
                      value={content.businessCard.address}
                      onChange={(e) => handleChange('businessCard', 'address', e.target.value)}
                      placeholder="z.B. MusterstraÃŸe 123, 12345 Musterstadt"
                    ></textarea>
                  </div>
                  <div className="form-group priority-low">
                    <label>Website</label>
                    <input
                      type="url"
                      value={content.businessCard.website}
                      onChange={(e) => handleChange('businessCard', 'website', e.target.value)}
                      placeholder="z.B. https://musterhandwerker.de"
                    />
                  </div>
                </>
              )}
            </div>

            <p className="info-text">
              Der QR-Code wird automatisch generiert, wenn die Website verÃ¶ffentlicht wird.
            </p>
          </div>
        );
      case 'seo':
        return <SEOEditor content={content} onChange={onChange} />;
      default:
        return null;
    }
  };

  return (
    <div className="content-editor">
      <h2>Bearbeite die Inhalte deiner Website</h2>

      <div className="example-content-selector">
        <button
          type="button"
          className="btn-secondary"
          onClick={() => setShowExampleSelector(!showExampleSelector)}
        >
          Beispielinhalte laden
        </button>

        {showExampleSelector && (
          <div className="example-selector-dropdown">
            <h4>WÃ¤hle eine Branche</h4>
            <div className="example-options">
              <button
                type="button"
                className="example-option"
                onClick={() => loadExampleContent('plumber')}
              >
                SanitÃ¤r, Heizung, Klima
              </button>
              <button
                type="button"
                className="example-option"
                onClick={() => loadExampleContent('electrician')}
              >
                Elektrotechnik
              </button>
              <button
                type="button"
                className="example-option"
                onClick={() => loadExampleContent('painter')}
              >
                Malerbetrieb
              </button>
            </div>
            <p className="example-info">
              Die Beispielinhalte ersetzen deine aktuellen Inhalte. Bilder mÃ¼ssen separat hochgeladen werden.
            </p>
          </div>
        )}
      </div>

      <div className="content-editor-container">
        <div className="editor-tabs-container">
          {isMobile ? (
            <div className="editor-tabs mobile-tabs">
              <select
                value={activeTab}
                onChange={(e) => setActiveTab(e.target.value)}
                className="mobile-tab-selector"
              >
                <option value="general">Allgemein</option>
                <option value="hero">Hero-Bereich</option>
                <option value="about">Ãœber uns</option>
                <option value="services">Leistungen</option>
                <option value="contact">Kontakt</option>
                <option value="gallery">Galerie</option>
                <option value="social">Social Media</option>
                <option value="businessCard">Visitenkarte</option>
                <option value="seo">SEO</option>
              </select>
            </div>
          ) : (
            <div className="editor-tabs">
              <button
                className={activeTab === 'general' ? 'active' : ''}
                onClick={() => setActiveTab('general')}
              >
                Allgemein
              </button>
              <button
                className={activeTab === 'hero' ? 'active' : ''}
                onClick={() => setActiveTab('hero')}
              >
                Hero-Bereich
              </button>
              <button
                className={activeTab === 'about' ? 'active' : ''}
                onClick={() => setActiveTab('about')}
              >
                Ãœber uns
              </button>
              <button
                className={activeTab === 'services' ? 'active' : ''}
                onClick={() => setActiveTab('services')}
              >
                Leistungen
              </button>
              <button
                className={activeTab === 'contact' ? 'active' : ''}
                onClick={() => setActiveTab('contact')}
              >
                Kontakt
              </button>
              <button
                className={activeTab === 'gallery' ? 'active' : ''}
                onClick={() => setActiveTab('gallery')}
              >
                Galerie
              </button>
              <button
                className={activeTab === 'social' ? 'active' : ''}
                onClick={() => setActiveTab('social')}
              >
                Social Media
              </button>
              <button
                className={activeTab === 'businessCard' ? 'active' : ''}
                onClick={() => setActiveTab('businessCard')}
              >
                Visitenkarte
              </button>
              <button
                className={activeTab === 'seo' ? 'active' : ''}
                onClick={() => setActiveTab('seo')}
              >
                SEO
              </button>
            </div>
          )}
        </div>

        <div className="editor-content-container">
          <div className="editor-content">
            {renderTabContent()}
          </div>

          {/* Vorschau-Button fÃ¼r alle GerÃ¤te */}
          <div className="preview-button-container">
            <TouchFriendlyButton
              type="secondary"
              className="preview-button"
              onClick={() => window.open('/preview', '_blank')}
            >
              Vorschau in neuem Tab Ã¶ffnen
            </TouchFriendlyButton>
          </div>
        </div>
      </div>
    </div>
  );
}

export default ContentEditor;
